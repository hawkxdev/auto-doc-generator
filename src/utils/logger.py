"""
–°–∏—Å—Ç–µ–º–∞ —Ü–≤–µ—Ç–Ω–æ–≥–æ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è —Å —ç–º–æ–¥–∑–∏
"""
import logging
import sys


class ColoredFormatter(logging.Formatter):
    """–§–æ—Ä–º–∞—Ç—Ç–µ—Ä —Å —Ü–≤–µ—Ç–∞–º–∏ –∏ —ç–º–æ–¥–∑–∏"""

    COLORS = {
        'DEBUG': '\033[36m',
        'INFO': '\033[37m',
        'SUCCESS': '\033[32m',
        'WARNING': '\033[33m',
        'ERROR': '\033[31m',
        'CRITICAL': '\033[91m',
        'RESET': '\033[0m'
    }

    def format(self, record):
        color = self.COLORS.get(record.levelname, self.COLORS['INFO'])
        reset = self.COLORS['RESET']

        record.levelname_colored = f"{color}{record.levelname}{reset}"
        record.msg_colored = f"{color}{record.getMessage()}{reset}"

        return record.msg_colored


def setup_logger():
    """–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –≥–ª–æ–±–∞–ª—å–Ω–æ–≥–æ –ª–æ–≥–≥–µ—Ä–∞"""
    logger = logging.getLogger('auto_doc_generator')
    logger.setLevel(logging.DEBUG)

    logger.handlers.clear()

    console_handler = logging.StreamHandler(sys.stdout)
    console_handler.setLevel(logging.DEBUG)
    console_handler.setFormatter(ColoredFormatter())

    logger.addHandler(console_handler)

    return logger


def get_logger():
    """–ü–æ–ª—É—á–∏—Ç—å –Ω–∞—Å—Ç—Ä–æ–µ–Ω–Ω—ã–π –ª–æ–≥–≥–µ—Ä"""
    return logging.getLogger('auto_doc_generator')


def log_info(message: str):
    """–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ"""
    logger = get_logger()
    logger.info(message)


def log_success(message: str):
    """–°–æ–æ–±—â–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—Ö–µ"""
    logger = get_logger()
    logger.info(f"‚úÖ {message}")


def log_error(message: str):
    """–°–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ"""
    logger = get_logger()
    logger.error(f"‚ùå {message}")


def log_warning(message: str):
    """–ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ"""
    logger = get_logger()
    logger.warning(f"‚ö†Ô∏è {message}")


def log_step(step: str):
    """–õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ —ç—Ç–∞–ø–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏"""
    logger = get_logger()
    logger.info(f"üîÑ {step}")


def log_separator():
    """–†–∞–∑–¥–µ–ª–∏—Ç–µ–ª—å –≤ –ª–æ–≥–∞—Ö"""
    logger = get_logger()
    logger.info("-" * 50)
